[package]
name = "vite-wasm-functions"
version = "0.1.0"
authors = ["Jacob Jasmin <jacob.jasmin.94@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde = { version = "1.0.130", features = ["derive"] }
serde_derive = "1.0.130"
serde_json = "1.0.68"
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
wasm-bindgen-futures = "0.4.37"
uuid = { version = "1.4.1", features = ["v4", "js", "serde"] }
web-sys = { version = "0.3.64", features = ["Window", "Storage"]}
console_log = "1.0.0"
gloo-storage = "0.3.0"
gloo = "0.10.0"
gloo-console = "0.3.0"
serde-wasm-bindgen = "0.6.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
